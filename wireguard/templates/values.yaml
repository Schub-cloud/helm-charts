replicaCount: 1

image:
  repo: hub.docker.com/linuxserver/wireguard
  pullPolicy: IfNotPresent
  tag: version-v1.0.20210914

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false

podAnnotations: {}

podSecurityContext:
  {}

securityContext:
  {}

service:
  type: ClusterIP
  port: 51820

ingress:
  enabled: true
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    acme.cert-manager.io/http01-edit-in-place: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  ingressClassName: nginx
  hosts:
    - host: wireguard.experiments.schub.cloud
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: argocd-tls
      hosts:
        - wireguard.experiments.schub.cloud

resources:
  {}

autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
containers:
  - name: wireguard
    ports:
      - port: 51820
      - protocol: UDP
      - name: main
    env:
      - name: "Schub"
        value: "SouthAmerica/Argentina"
      - name: "PEERS"
        value: "clients-name"    
    livenessProbe:
      httpGet:
        path: /
        port: http
    readinessProbe:
      httpGet:
        path: /
        port: http

wg0.conf.template: |
  [Interface]
  Address = 10.0.0.1/24
  ListenPort = 51820
  PrivateKey = ""
  [Peer]
  PublicKey = ""
  AllowedIPs = 0.0.0.0/0
