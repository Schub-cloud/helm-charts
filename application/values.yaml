# Default values for application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

pdb: {}
  # minAvailable: 1
  # maxUnavailable: 2

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

pvcs: {}
  # pvc-name:
  #   storageClassName: manual
  #   accessModes:
  #     - ReadWriteOnce
  #   resources:
  #     requests:
  #       storage: 3Gi

pvs: {}
  # capacity:
  #   storage: 5Gi
  # volumeMode: Filesystem
  # accessModes:
  #   - ReadWriteMany
  # persistentVolumeReclaimPolicy: Retain
  # storageClassName: efs-sc
  # mountOptions:
  #   - tls
  # csi:
  #   driver: efs.csi.aws.com
  #   volumeHandle: fs-e8a95a42:/dir1


# env vars to be rendered as
# env:
# - name: <VAR_NAME>
#   value: <VAR_VALUE>
env: {}
# KEY:
#   value: VALUE
# KEY2:
#   valueFrom:
#     secretKeyRef:
#       name: secret-name
#       key: secret-key-name

envVars:
  enabled: false
  envs:
    #first_env:
    #- configMapRef:
    #    name: env-configmap
    #second_env:
    #- secretRef:
    #    name: env-secrets

#enable automatic restart upon confimgap/secret changes
reloader:
  enabled: false
  auto: true
  custom:
    #configmap.reloader.stakater.com/reload: "foo-configmap,bar-configmap,baz-configmap"
    #secret.reloader.stakater.com/reload: "foo-secret,bar-secret,baz-secret"

volumeMounts: []
#  - name: secret-vol
#    readOnly: true
#    mountPath: /app/application-config

volumes: []
#  - name: secret-vol
#    secret:
#      secretName: mysecret
#      optional: false

service:
  type: ClusterIP
  port: 80

probes:
  liveness:
    enabled: false
    probe:
    #  exec:
    #    command:
    #    - cat
    #    - /tmp/healthy
  readiness:
    enabled: false
    probe:

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

httpRoute:
  enabled: false
  annotations: {}
  parentRefs: {}
  # - name: tls-gateway
  #   namespace: addons
  hostNames:
  # - production.odoo.schub.cloud
  rules: {}
  # - matches:
  #   - path:
  #       type: PathPrefix
  #       value: /
  #   filters:
  #     - type: ResponseHeaderModifier
  #       responseHeaderModifier:
  #         add:
  #           - name: Content-Security-Policy
  #             value: upgrade-insecure-requests
  #   backendRefs:
  #   - name: odoo
  #     port: 8069

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100

#   cpu:
#     targetType: Utilization
#     targetUtilizationPercentage: 80
#   memory:
#     targetType: Utilization
#     targetUtilizationPercentage: 80
#   customMetrics:
#     metricA:
#       name: "A"
#       describedObject:
#         apiVersion: ""
#         kind: ""
#         name: ""
#       target:
#         targetType: averageUtilization
#         value: ""
#     metricB:
#       name: "B"
#       describedObject:
#         apiVersion: ""
#         kind: ""
#         name: ""
#       target:
#         targetType:
#         value: ""

# Enable podMonitor, serviceMonitor
prometheusOperator:
  serviceMonitor:
    enabled: false
    name: ""
    port: ""
  podMonitor:
    enabled: false
    name: ""
    port: ""

nodeSelector: {}

tolerations: []

affinity: {}

# Enable priorityClass
priorityClass:
  enabled: false
  name: ""

#configMap:
# name: my-configmap
#  data:
#    odoo.conf: |
#     [options]
#     addons_path = /mnt/extra-addons
#     data_dir = /var/lib/odoo
#     proxy_mode = true
