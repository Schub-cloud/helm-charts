---
# Source: wazuh/templates/Secrets/scr-auth-pass-wazuh.yaml
# Copyright (C) 2019, Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Wazuh authd password secret
apiVersion: v1
kind: Secret
metadata:
  name: wazuh-authd-pass
  namespace: wazuh
data:
  authd.pass: cGFzc3dvcmQ=
---
# Source: wazuh/templates/Secrets/scr-cert-dashboard.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dashboard-certs
  namespace: wazuh
type: Opaque
data:
  cert.pem: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lVZDdUaXFLRjJ5emxyVnpGbi9iT25hVzVPc3Zvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TkRBME1UY3hPVEkwTVROYUZ3MHlOVEEwCk1UY3hPVEkwTVROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzdGaCtIWkdka2FmQmZzUkJDRW9SbllKcHcwRGdJb1FMbk9UbjMvaTRNCm1oeWNtYXpGeWxnV1BBem8wSFBRQm9XZk5KelgyMnZZQTZFY0w0MzV3QmVSODY2NzJCc2U5YzdOVTZjNHhJR0kKWW5pRml0TnkzeThrVktmaU9ibEVjOE1JYzFlMFlBeG9BT1U0ZUVseE0yQWhrTGxvWnhHVTNOb1N5elBvOVl4SApxaktpeEtoVlUycitQa09rMyt3eXNlWnFxd2RwV0hpUDRQL2VvMUFRdFA5N2txamI5QjBCL2RINzlCNjVpd1dGCjZudlU5elFGdFZkU3lvTzFFQ0JtZ0V0WUptZHhSN0FVZ1pHenFPb0hyUjgzYU54N24vZXZSaTY1UWlJeVhSNG4Kc0dVQmsxdTlqWEZsemljVnhGNkFaYmYvakQ0clVVU3llZTZacTQ0c0hmT0JBZ01CQUFHalV6QlJNQjBHQTFVZApEZ1FXQkJTNFhVd1VxUEZEaUExQXVUa3VpTUhPVForS1Z6QWZCZ05WSFNNRUdEQVdnQlM0WFV3VXFQRkRpQTFBCnVUa3VpTUhPVForS1Z6QVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQk4KOVZjSGhTWG1ZTUZ0ZHB5QTIvMkRQNm9UQm0wUHJFQVRyRk5aeVRjTW5tRnFBeVpRcU5MRXl3UGtHM2lDaVkrZQp0QTB2eWpVMm1HVmZOeklRSUxXWUcrRlNJZXg3c1pPRUZUeTNWZ2pMa2NRcXZFcWJlZ29tQkx6Yk43Q3BJb2ErCnRjWnYyL0NTejJEVS9yangydUVzM1drUVVjTHRXSENZdlVEQ2Znb3hQK3BFTi9zOEx1MllxcjVlMXFzQU05TkwKY0tvUFZlYlB5VTQ4c282T3BhWWlYQzdab29wK2dTTmpJcFhzR0FVVVQ2cHAyVWRqNVlSS3EzZ0JFNEVrVjhOagowZ3dtMmhWV1dpQ3E0L21KUUs4TncwdWh0YmZTYVYwVDl4c2NkaVZEVWRkVndtUGV4SENHUzdDajVrNjRJT0lVCngzclMvc0l0S1ZPL3h6Y1FibXhPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: |  
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQzdGaCtIWkdka2FmQmYKc1JCQ0VvUm5ZSnB3MERnSW9RTG5PVG4zL2k0TW1oeWNtYXpGeWxnV1BBem8wSFBRQm9XZk5KelgyMnZZQTZFYwpMNDM1d0JlUjg2NjcyQnNlOWM3TlU2YzR4SUdJWW5pRml0TnkzeThrVktmaU9ibEVjOE1JYzFlMFlBeG9BT1U0CmVFbHhNMkFoa0xsb1p4R1UzTm9TeXpQbzlZeEhxaktpeEtoVlUycitQa09rMyt3eXNlWnFxd2RwV0hpUDRQL2UKbzFBUXRQOTdrcWpiOUIwQi9kSDc5QjY1aXdXRjZudlU5elFGdFZkU3lvTzFFQ0JtZ0V0WUptZHhSN0FVZ1pHegpxT29IclI4M2FOeDduL2V2Umk2NVFpSXlYUjRuc0dVQmsxdTlqWEZsemljVnhGNkFaYmYvakQ0clVVU3llZTZaCnE0NHNIZk9CQWdNQkFBRUNnZ0VBT3B2MHBxS3lyVWR1OFZ0ei8yN3pvYnNteHQ3RUh4ZnA0K3dPbC8wK0NkNmgKeGdGeW1jZ0pEbllqaVMvOGlCZnk5bXd5RW9GLzZIMUNsS1RsTW0rV01yZ0hibnVHQzQzd0NtMEJmd3c0bERSZApFMkRwV3h4R0ZYaWIyNGcvM1F6eTlZdkUxeEliOE4wTzhrRGtxUnp5S2JIQUU4L3VOeGQxRGR3dzEvTk16Z29lCnh4MEwwRy9xMXpQNlVHMDkrUDhBVk14bVQwUW04MWpnbTQweEVPVUJLMkpKbmJmdmxpRGdxWlQ5NXVydmkwZEUKWTRsRVRXSGVSdVJvWGZYRjIrd2VvTzRmT1k3Y2JkRENaZlpjakRXUnRMMnZYRmZ5TS8rMGdQK1VIT3VrM1BHUApEb1JMMzA4TEgvWXR1OUEzaUVDVlZsTWVuRGFaTzhVSjkza2ZIWkpnalFLQmdRRHpyaXZqVzg0Wk5Wb3dkaFhjCmJvdG16RDJONC9aR2pMMG1GeGZOTnpQT01nNWx2c3VFYnp6K2FNcjdGZnptcjZaY0N2M1E5YzR4bjdFaUdiYXQKaWovV2RmUmZ6YW1WVFhvaFdYMG5wYWdlUWQxVVkyNkZLelZ5SFhPL1NVNURwOEFMc3E1VzZoU1hEWWlQNnpUegpDWTY0bWFWT0RBTHRkb0oxWnM2L0xEbERkd0tCZ1FERWkzeFhWRVhzZ3FzRjVmYTFPZWhQMEw1Q2VZdDNBbHRNCitZa1ZudHpBVUV0SGNNZnJvTXpKYTEwM1NvUXpyckVvSlVhdkdpWjRCY2pnNWRNZmVNbUlpTFY1dnhrY1p3YzgKbU5yM2RNSklrSUVZQmZKL1RCZnBvQTZjejFtZXVwQUd0b0hXQXBTd3o0aVhCM2tsVzZHU3hRd0ZmV3RHandUYgpIR2VrbStZT3h3S0JnQzc1MHFnZjJKbHZlWldDRGpEU2RyazRnbDFLSnYzdXY4QUtENktXRTd5YVZjQXppZFJjCkJXd2VFNU5YNThzbzdXOHRCMFV6UGE2L1ZFeDRuSWpUNy82TityQkZXMzNXMDhaK0UreUN1T2dzVmxpZ1dudjkKbW00SFUzcjZ6TVdxSHhHaVBvMnV6bzFZSkkxcUVHa1IzSnVsc3dKYXVtM0F2T0daRWg0MGprMTlBb0dBRTZTMQpPcTByaCtYUFhmbUwzTFQ2Nk84OTlMcmRHM25hMGlpbWNNaTkyMktyQTJyY01FcVQ3UldUN1hDL0ljTTE1WU5FCk96L3IxRmNQcXBxTnJUbVBPdHdlOXhvSVVuUmhuc2JRSzZjNXU3TGxsQmNVRTNEeGV1SUtVOVhOYVRYUUt6dVcKWW1ORHBTQTQwSTlvcGprd1B0RCswSldtWVJqdUxVLzdjOUk0L2dVQ2dZQmRZOGs1c3FtN1VOY2x4V0xObDZkdgo2VjV0L0lWaXZ4N2duOUxtTGRQeU9MWmZ6d0RwYW9DMHJRMjdWczRHazdnSHA0RlNpdHVVUkE2L1puY2srdURYCkpsbi9NVXhLV3JTVGhUczNncnhGY3o0VEgvc21HRjhYNllVZVViWlNtSEV1QjlESFB1anN5ZHZnS2VXSDdoSEQKL0cvbE9VaVp4aGN4ZTM0N0hmTHJ6dz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  root-ca.pem: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiVENDQWxXZ0F3SUJBZ0lVZnFkdjZFUjZnV1F6dXVBTUJzMjVaRVdEMTZ3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JqRUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWNNQ2tOaGJHbG1iM0p1YVdFeEVEQU9CZ05WQkFvTQpCME52YlhCaGJua3hFREFPQmdOVkJBTU1CM0p2YjNRdFkyRXdIaGNOTWpRd05ERTNNVGt5TkRFNVdoY05NelF3Ck5ERTFNVGt5TkRFNVdqQkdNUXN3Q1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQnd3S1EyRnNhV1p2Y201cFlURVEKTUE0R0ExVUVDZ3dIUTI5dGNHRnVlVEVRTUE0R0ExVUVBd3dIY205dmRDMWpZVENDQVNJd0RRWUpLb1pJaHZjTgpBUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE16cFBkMUkxM3pvWjdZZzNEWFlHMUh1R1d0dWhsQ1RqSkM0QWZ3CmRtdjloNzBheURmN0k4bndaaEdVeTJwbUdKbzRaandqaHNYSmQ1WVV6OHR3c3ZSaUNPczBTVkZYcXc3cjVUOGMKSUJHS0FOSmN3bFhYcmYrS2EvMGxxSGROcGl2eXFBS3VMbW8rdjN2d3pLcnFYT1JhcjVyQy9aZHlaU1ZENXJvSwp5N3BscVE2dExzWEpCMTZQSC9DUDgyM3p5aFBOaVdRMm5CdWtRMk1Eb1dITzhoUFJWRmNQMjh0YUg1OEtXc2pTClIxQzVGUThaR0Q3VVNVUWFPc3FjOU1pY3AvTGJuU2hiQ2tMdjJTRk5jdXZRTmtEalR0Rm90REp2REdpdTZHQnMKZVBpeTduMWd1T1c3dC9SSWU0TmRiNEwzY3M5eXQ3ZWlSbzNGTW9Cemh5eTlUdmNDQXdFQUFhTlRNRkV3SFFZRApWUjBPQkJZRUZISDhPZHRlL2RBUEVmdnliKzFnbEZ5aWJsZHFNQjhHQTFVZEl3UVlNQmFBRkhIOE9kdGUvZEFQCkVmdnliKzFnbEZ5aWJsZHFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUMzNG1YY3o3U2hwNTZGTjJvSWxQbWVjR1krTnllRllyUGpkZXpFbGNjbThEcnhzNEU3TUxSTnhCUmJlODdmaAozODh1ZVBnWFVRdnRoU1pxN3VEU1lWV0ZRWlVISVJZbGFFNElxTnRRTE9PS0RrSHZwVXlIcSszUGtaZ2R2eEY3CkRibXRyV0JyU0pDN0hIQTV6d0xDTmRtTm1GS2g1ekh4aU9Ud0ljTmN5dmdqSzUzVGRKL2VZQ3QzVVNNNmdhM2MKQndxMm9yZXBSRHhRckVPOG90OThtcmVQS1Bya0ZvazkyY3grRlNQdC9TWEE1MVJSdkxPRThzd0paTGpYcUo4dgpSa1JCK1NjR1Y5aksvT3JGczJIU1ZNZmJpZnFJTmdWb1pvTStPOHVOVmlTMHR3azRMT0Z1MGlIUExqQ08xWDlQCkQwbW5oRkYyZkZRQ2lDTmhaaFlMbUYwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: wazuh/templates/Secrets/scr-cert-indexer.yaml
apiVersion: v1
kind: Secret
metadata:
  name: indexer-certs
  namespace: wazuh
type: Opaque
data:
  admin-key.pem: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ25sUUpCeGdMdnRGK0UKOTYwa1Rmc1RWck5LUFNoSjIxV1U0aUJPd1pWQnU1eHFOdmpYM1ZGRHBPeTdlRENDZmFTd3gwR3NlZjUzODlUegpVejZPMmY5WFRsWDY3VklVWEdPL3FWYmp5NWxzOXFKWEVwZ3pNUE1hNUUxRnA3YWxabjFPT1BWQXlBRzFQOUZjCjZGSTlVU0RIYVBwazBSRGtMc0M4SWNVSlpsM0lDM3hhWUZINFRHTy9yUFVOVFpqVWxZQjNjL2x4WjdlNVp1UUEKb0todjlUU0pLeXhMcnFTckVrZjlTRUZwV2g5bkFSQnZwME9jNW1vZWRuUVJlSjRaSmppZmcxampvaDBrMHN3awpmYkJuQmhqMG5NZnI0Y0NGVFJrNHl4RWFWbUl6OG0zSFlXUENmbXREK3Z0RTZDRGtIUW9hZzFwZ1hKRUZWOHNSCldINmExend4QWdNQkFBRUNnZ0VBRFlBQUJBdHZEaDlpT0lSNVVyempkbzNiK0tXUG1zK01CK2ZsZ1dLdjR2RTUKcXdiTnFob2VvMHZrZEQrODdLNHhkN285aktieFBIbU1sS09HblJ4cnFQMWJDTkZZZE9KeWVLeXNIc0syaytRVQpkTjQvRzVTY2FQU3VVdWV0VzRxem1uc1ZLc2hSOXVkeXRzRFNhelVmWm1FTEZ0Y092TXNWWkxKMXZJbWVFWERWCnlNaVhKMGR6SXdCSlM0eUtTMWpXSXZSYVVnOHh2cGZneUJQSUNSR0Zpa2JaRksxbW4xNGZraHVxcEZXaTJyOWsKdisxekdPc0pOeXIzWUVrc3VSMGNCV3ZiaFowWW4vQXlvMlEzMXVaRDBSZ1g1MEgwNkwyb0o4YzRYandpdloyaQpRbnlRQWlLWUNRZmxGT1RnL1ZVdC9uNnQ4MUZtbXhLZm5JWHZFS0dPUndLQmdRRHJkTFJQZ1VCS2MvelVVOWRqCitiTzlid0dCZURMeEdLMnJYSmpBcGUvMEcwdHU4bSswcGFzK3ZtWVdqWVh6eCtaZi9LT1ZzOGJGM3k4Y0FQUnIKMndHMFNBVlZpRndqWCtGRnFqbHYzVTNoTk5BMExGK095dVdKVkR1dGZkdk5xdzE0ZFcxVGxHUDA1dnpGblhLWQprVkMrczYyeng2OFY2M080VEw2UlM5azM0d0tCZ1FDMk5Ec2E0c0wwNGVsNStpM0xpcG5zOENGVkhTTFlKSTkwCkk3TlZtY3VGRFRFRHpYT2hqVnJlUmRTSG5uT3hCWWF6R2NLSVZuWDRkcVVTYStSc1ViRW5ienZUNlRodmdBQUYKR251UlBqRTJjbVBkUStwd1B1WVRlTmpMaHJzcldWVVNhRy9WTHQvT1haUUpXRk9GMXhmZnJJZWNFd1lUSkJ4dQo4SFV4SkdOdjJ3S0JnUUNrWmkwTG9pU0FsN0c5a3ZpK1BuZ0lXWHlFcUtkdy9aa3RJQThyMi9ESjBWRC9HMWx4Cm1ZY1MzU0FzdVE0Qlk5N3Z3RmQ3ekRXS3JVV1lXUFpRWkc4eE1HUkJEMSs5OTFFME1pRytnSmZER2Z3Um9iWHEKM3JJY0MrdExQS2gvVnVLbDY5KzB6dFJvQit3UUV0b1R1c3JWREdISk9EQ0FycEJ5NjJyWHlrelZud0tCZ0cySwpuMUk5cktvZlBBZ3FnZWZTTDFLRTEvVmM2L3I0bUFwaUFFcGhpVHMzd0JVaUt2ZWdqVlgrczVUSmpaS0syUDNLCmFlc2YyQk1GK1o1R29YRUIrRGpXSmlqMEdRcm44SnNnM2RObmlaekxUd0RTK1JwOHBrUmtyaXBHbVRhcG9Yek0KcnhlQzgra1UxNUI2dXRSSGljSGU3elRGTnl6QTFCdGFrNHAwN3hkckFvR0FTWksvWW5ZSldZZnpFL08rektYOApaZVdLMHltWWMvNC9mYWFCUTAzbzdRdVBjbVZxT09hYUplZnpiQ3M2RlZqYXdPZFpDTkhaMTNZbnd0RGx1V2FqCkxNWm1JeXQxbmF6bmZuY3FQalhaaTJ5M1RrZ3FKR0dCNEFEaEdtcDhHQTJkWU10aXBMMEN1TzRMN2RzQ2hFRkgKNGxmeUN0YVRXOXpuYXZPb0VadXIvM2M9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  admin.pem: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZrQ0ZFZ0xDeEVBUUhQWFVsZmVjM2VESlk2RUgxSnlNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1FWXgKQ3pBSkJnTlZCQVlUQWxWVE1STXdFUVlEVlFRSERBcERZV3hwWm05eWJtbGhNUkF3RGdZRFZRUUtEQWREYjIxdwpZVzU1TVJBd0RnWURWUVFEREFkeWIyOTBMV05oTUI0WERUSTBNRFF4TnpFNU1qUXhPVm9YRFRNME1EUXhOVEU1Ck1qUXhPVm93UkRFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBY01Da05oYkdsbWIzSnVhV0V4RURBT0JnTlYKQkFvTUIwTnZiWEJoYm5reERqQU1CZ05WQkFNTUJXRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQwpBUThBTUlJQkNnS0NBUUVBcDVVQ1FjWUM3N1JmaFBldEpFMzdFMWF6U2owb1NkdFZsT0lnVHNHVlFidWNhamI0CjE5MVJRNlRzdTNnd2duMmtzTWRCckhuK2QvUFU4MU0ranRuL1YwNVYrdTFTRkZ4anY2bFc0OHVaYlBhaVZ4S1kKTXpEekd1Uk5SYWUycFdaOVRqajFRTWdCdFQvUlhPaFNQVkVneDJqNlpORVE1QzdBdkNIRkNXWmR5QXQ4V21CUgorRXhqdjZ6MURVMlkxSldBZDNQNWNXZTN1V2JrQUtDb2IvVTBpU3NzUzY2a3F4SkgvVWhCYVZvZlp3RVFiNmRECm5PWnFIblowRVhpZUdTWTRuNE5ZNDZJZEpOTE1KSDJ3WndZWTlKekg2K0hBaFUwWk9Nc1JHbFppTS9KdHgyRmoKd241clEvcjdST2dnNUIwS0dvTmFZRnlSQlZmTEVWaCttdGM4TVFJREFRQUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFCMHU0dGJESHVsOEhjd1dtYXBTNmZhczd1NnlVQlJMcXNpNDJXM2duaVBML0ROZEFMVG9sRVJmVE5JCmtjcWNtNHlPdDIyZm5MRUZQZU9VY2dETUhLN1dYbDM2U3lwcUl2ZWpvNGo2ZEpUUHA3eWJDTWJSTklQcWh0U1AKc3FCNmdua3BGaXgxbzRGNFh3THlKUnpWYTJWQTE5NDdVbFNmcjVCVnovVHhhYXpiNjZFR3Y1Ukc3N0F5Qm1MTQpGTXRPYXc1bjh1SGRRN25QYVRTOWpraS95eW84L1kvdmFGQ3N3UDJtUVdWSjR2L1lOS2ZTaVhxUTluMnY5Z0VmCnA1OTgwR3ZoWEdTOGV5TWZuSkkxM3dPMEoydytnTy9TbjJTT2dLbzMvK0VYcSt1TytBWTQ4U0o1eGxXSHp5d0wKZ0d6cElJZ3g0djZ3Wlo1V1AwRTRuZVVNM3RFQQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  dashboard-key.pem: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ3pNTHN0M0tZQWU5TjYKc1FEeUd5amttVEpUc3lZMzAvcWE0bUJiRmYzNktJTjBaN3lQbTJnQXBtNXB3ZHBlZFF1OHBxdk50ZTgyUjhMVwpRRk1waXdQTzJ0QnJ1aW5zQStvVWpFbVZUN2JyU05qU3lRTTVxcmZPZjhKVXpYc1Z0UGh0V0dHUmkySTdrTWp0CmVybzczdWw0ZWwwWDdXL0kxdDZXeGVHT0lNK055TlJlZElSVlY0K0djTWRxSXBCenhDaThwR2VqQTlXT0hQbW4KZThQVkw5UEhwMWk2akZ5QnZDRFZjbU9oRWhRNUU3REFHUU8wTEloblI3dnFMbEhzNm9CYi9UQlVsSXZlamh4UgpRTnBsV0p5d3crV2xvMk9HcEpvMC9BN0cycE1vdmtyUUV4dUordXhHaXFrazU3NzRlS3B1dG9IUUU3NjNmMFNLCkVaVk8wR21YQWdNQkFBRUNnZ0VBUlpFNFFrUmxNRS9pbVVJSjUzU3k2aGt0NkQvbnFRb0R3OGo2ZHJKeGtZTFUKRWtmSjlZajBsamdIS3NqbmdmOTRDSXcrckJVam8xTzE2Vjg4eWlhZDJsdXFTZ0NURVAydURiOHZQQ2dnRUhXTwpORHQxSkpqS1ZvSFVUUDhmZDV4MFRHTmhNZFBHMWZCT2lhQTVtRS9oSFhTSUd1ZUVIQm1MZmthaDNIK1JoTzRhCktOd3pDTFpzWHAwTFdRQ2RDTnJYd1Q4QWxuMXhuQnNyT3gvR2ozbzAycUJWQWNrUkw1YVp3WWZiaEwrYnNtTksKWTJ0bjB2S3l3VmFaamhEQTR3akFxLzZrWlV1VnZYNGZBUHNWK0hHSDhKVTlBVG5OVXY5OXhKL1k2ZVVaTmxuSQpPQlhsZEljVUZCNDk5NWNPanlCMWtxTTBzeUJuSm9Eb3VwZkJwMnp2bVFLQmdRREo2RDFLeTY4c25nSHB1SERqCmZEZlJJMlFvalV5MUJSUzVmdUw2NDBvaUJFNDF3UDM1KzRZa1k5b3dvZmtuLy9jVUkveWhsdVJka09RVnQ2eXkKWWxqQ2xUczNCSjduRHFCa3hsRmdzYjM2L1NUeTh4RW91UE9Fd0lYUWVpTGlpL3NrbVVaY01pa2c1MllqSU1UbgplT2d2bFczT1cwYmZJbElSRk5DeUg3WVVtUUtCZ1FEak1uYURRUmJ0SWZERDkyUDRZaUxUZHdqQ1JacFBWMFozCnRJbUk3UTljWE5nK0NMa2hwL2x6M2hPYVpjVE1qS3czaGxXMkZ0WllMeTc3dW4vbk5pZ29wdncvQjNkeElySXAKdGFwd1dCV2p5Y3R2SWpTaHk0dWpJVDg4bU1yZ1NNZG8zT0pMTXVOdVlaYmtUZU1BQVF1MkV5cEFZU0pRRzBhWQpDdnZrcC9zZHJ3S0JnQlRDTGRzTXlmdmFXdlArcEl5ZTd0WXZ2MUowQkpqdjVzdVRnaDZ0VTZmZnJYTFZYc2RlCjF0SFMrbEhadFZZcGVPdTNMM2dsbldFSlRvbjFFbXBjdGlkN1ZGVTV3bVNiR2w2Q0RVZlZ2bVNadGp6TVJNMWQKQnB4MWRzeVNZaGZNc0l0NHZzVW4yeGFvODlWVXZ5blZRbm54OFJJd1REOFF0a05QVW8yZHVRaXhBb0dCQUxpdQpkNG5BS2p1K2dERTc4eWFmMTBGZ0hGMlhLSlZnRTJjUStVKzFxK3ZmaU9QOFFVa3JldW9GMXBlR0xGQTk5V3Y1Ckpja3JqVGNIdThCaVhMLzgxTzRldHlNaEZhV0FsNlN5Q0lia0Ewc3RxTkdBMDVuRmxJK1pZZ2NIQ0xzQ1RoNWUKbHhDYm9DWkU2OXhQdDd0MEhpbjJNRDArK0I1MzNZMlFPQ3dwcEVYL0FvR0FHVFhyd0RCalZpMktwMlVKVmJqbQpERWdtVlMxQ1BMT041K2poRktUL2tRbFNLbi9DVFN1NHFyWXN6V011Nytza1ljS2dGdlhoUS83R0xyVWw3dnNjCnppcFpETTJwbVJXYnYraVNsNm5SSngxUy93d2FJcXU1eUpXK3dBcThORFZ2MzRWdVhqVXhwYVoycGNvL0NPWWkKdzZrb25DWUZrSFFENTJOSXh0Z0kxQlE9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  dashboard.pem: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYwQ0ZHRjVDbjJHbW1ZVkdTYVdFWFVEd0NRNGRBck9NQTBHQ1NxR1NJYjNEUUVCQ3dVQU1FWXgKQ3pBSkJnTlZCQVlUQWxWVE1STXdFUVlEVlFRSERBcERZV3hwWm05eWJtbGhNUkF3RGdZRFZRUUtEQWREYjIxdwpZVzU1TVJBd0RnWURWUVFEREFkeWIyOTBMV05oTUI0WERUSTBNRFF4TnpFNU1qUXhPVm9YRFRNME1EUXhOVEU1Ck1qUXhPVm93U0RFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBY01Da05oYkdsbWIzSnVhV0V4RURBT0JnTlYKQkFvTUIwTnZiWEJoYm5reEVqQVFCZ05WQkFNTUNXUmhjMmhpYjJGeVpEQ0NBU0l3RFFZSktvWklodmNOQVFFQgpCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMTXd1eTNjcGdCNzAzcXhBUEliS09TWk1sT3pKamZUK3ByaVlGc1YvZm9vCmczUm52SStiYUFDbWJtbkIybDUxQzd5bXE4MjE3elpId3RaQVV5bUxBODdhMEd1Nktld0Q2aFNNU1pWUHR1dEkKMk5MSkF6bXF0ODUvd2xUTmV4VzArRzFZWVpHTFlqdVF5TzE2dWp2ZTZYaDZYUmZ0YjhqVzNwYkY0WTRnejQzSQoxRjUwaEZWWGo0Wnd4Mm9pa0hQRUtMeWtaNk1EMVk0YythZDd3OVV2MDhlbldMcU1YSUc4SU5WeVk2RVNGRGtUCnNNQVpBN1FzaUdkSHUrb3VVZXpxZ0Z2OU1GU1VpOTZPSEZGQTJtVlluTERENWFXalk0YWttalQ4RHNiYWt5aSsKU3RBVEc0bjY3RWFLcVNUbnZ2aDRxbTYyZ2RBVHZyZC9SSW9SbFU3UWFaY0NBd0VBQVRBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFaZUgyU2NiZnRPK0xBNEhuVVZEK2RsdTh3YTJ6bHZpZE80MWs1bnJQdTlJenZMdkNnNHE0CjM0Y0w4YnY4S2Z2TnFsekNlUC9teWl0MmkwOTNvQ0toTmJRczFSSHB2V1g2NklBTThFZVFxRHhMOWFtUFNwTFoKZFdnNE5GN0paUG8vUUMvdTdFRVp6VytXSytaN3kvRElzRXUrZWwvMTBYWHhrVWVnWHdyTkJkTE9GZktSVlk4dwpydVBhd0NJU3RHT2djMG9MMUY1SWtIai9aTHVsTjhDYThFemZ5a1AxM1BVaXhUSTNuRHhVekxoMDI5Zmw4dVNYCmJJY0I5aU1ZTFE1cFR2UzZmYzg3dDB2SlR1b1huYU1aLzBsSmlYS25CcjI0MW9qOTdSb2NFZmxqNGo4ZkNPY2EKNktqM1ZpMVFBbXRLWDJZbm10Wmw4Z3lHR2VhdWVjakhuZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  filebeat-key.pem: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ2pCaWlFSVlEbFhXalEKSCsyRzYvc2Z2RnFySXN3RnUxdk53OWdJUkxWU1BiajdyVjhmSnlld1VOV3lxdGQ4SStYM0pCVmRPdndwZjZxWApKVGJ2d05IRnYwUkIxdGxWQnRIeG0wbnRraDQvSTZYMjRxNG5VZEd6clBzaXN5dFBRRXIzWXRnd0Q0LzkwSlZ4CnNHSHZnRk16bVQyTnp1djQzNnlvMVJ0K216T1JEa0NCZUJSdUZzd2tPbkwrdTF4RFo2WFBWQUJlN2YwR0VVZFgKZ3Z4V216eC9nRTEwRVh3bXd4cnhYNllkeFA1MEpoYXU4bVVFb1FJRmdqaWtLaEsyZjRoZHd5L0Nzb2VWN0RRKwpQaVhGeEh5VkxEbVRRRlJwTDlFU2ZWamxmc29UWG9oV05zU2dya2dYcG15QStaQUZhTkE2Vm5TbmFUTHRLZ3lzCjJoTEttUlJ2QWdNQkFBRUNnZ0VBQStwVDhzaHpOZzhHUTJsZzVRcXAzMXRBdWpkOXV1MkRDUEFaTWlta1NUTmUKUy8wZitibVJCSFVNak52NWpPdTN6RFc3cForVEN0UWNIc0V3RHBZTTg3amlSTXFLTWJhV09EMUlpMElsSTlNUgpXMXFhWUN0ZzQvWFZta0cvV29ucXd3Skd1dkRFdm8zUjZRY1pjdzBiOG5OTnZTZ3BGck1ZakgyQnlZcWt0R2tmClp0NHpwbE8vR3VPWVJScnVMUjAvMUFQd0Q2VWNHOEN3ZFVwU2p4a1BuNm10ODJ1K0NOdXdBVFk1UlJIQXp4VzUKbUEzd0FMYWtLOGl0RDRmcVZKb2pjbXZvajk1Y3preW5DYUZ1eXJPUWxTR0J4M3NNQXdFYWVmeWU0cmFmcU1QbgpJV096TDM5MnB0aTJCRDYzd2kzU1lUNHlIanRDZWpzWFJiSzdZck0xb1FLQmdRRElRMlZzODBPeE5Vd1lCdUFvCjUzTyswbzJzaDlzQ3FVUFNkbXdTQ29icXY5M3N3RkN6ZzBuZlFFOTVqQzlFZFdQSUppMlM2aGJKMGdXbXd1Nk0KVVlOc1lkN0tZamJaMlVTeEdLSGgwb3BrNldYWGRhc2hwS3EwMDRHQ21zZ0FoTnJWejRKNU1MeVBBVkxIQVJWeQpxc0plZlkwWnh6SUNxUXEvUmJXYWkvQ3hsd0tCZ1FEUVpYODNLNDJXSFFJQ1lHY3d2K2l3ZFg1dFI4SUZtM1AzCitRaWdqVExIWW1QOFZjdWJVMytaT2t2eXlHUk5pZVVBZ0dNNXc1VjE3N0I2YlBKYnNxYmdYWlV4Q3NoV0lKcnYKR0lYQWcwVkV4Y2lESWxQbC9lb0lqVEwrYVF1Z1dFTk94MDBWNVVSU1B4ZFVCY29YV21TbFNPUWg0WjR3V1ZZSAovUms3MVg1ZTZRS0JnQ1ZiL1ZYZjQrYnhMR3JuRFhaVUIxRzM4ZG9YMWhHZkJob0RJWklVQ0t0T2M5WXc0bDA2Cnh0TXhLaUpndG9pczVacDNGTlZ0ZWliWVdWbU16L2U1VlMwbzdPa1FmVzhTaXpBR2lseVliRno2OVpiR1N0Q1IKNlk2bVRtalErekt0bGkyQThyUXRGV0FRUFNNRzNydHZnNmNoQU91b0wzb3prdCt2MzNzZlZCMnRBb0dCQUppTwpOSnJHbjFlTTFMTzRydEhaS3haQ2JOTEMvUjN0dHUrSXR2QVJiV0xZZkNsMUJTQW45L2pMM0YxV3BWYTk0NDZDCmJpRVROSTZwY0ordXNaeS9JN3FMeDNPbldSRHp2WGZhazg5aVNZc1czcnBnbnRwM0RxUkQrVmlVdlpZY0J1bmMKckdtaTlHamhGc3JEa2pXV1RxZFF2UEN3b1lUellTOW44TmtFYVFaQkFvR0FmV09iVmh0WDZncE5zbGV2ZzVheAoyTVAwRjdYQ25rTnVUZldGTit5emJIQnM4SmlDTUxXVzR0NHRmUVpHNUpUVW5GYm1QZ1NhaDhRTENMc0wrb004CnhwTVFqWmdRQmJqMythMVhHSHgwUUl1Tk9WNEpxR2tWdFRXNFBVNHU2c3l2NnhlYkh0ZFhwNzIvbGVnbWN5QUMKa0ZtN2hzMjJQTm1SNkdQNjg0UmJzUzg9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  filebeat.pem: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ3Q0ZFK2tXVXlMdzhqbnJrNFFscVArYkUzWXUyeDlNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1FWXgKQ3pBSkJnTlZCQVlUQWxWVE1STXdFUVlEVlFRSERBcERZV3hwWm05eWJtbGhNUkF3RGdZRFZRUUtEQWREYjIxdwpZVzU1TVJBd0RnWURWUVFEREFkeWIyOTBMV05oTUI0WERUSTBNRFF4TnpFNU1qUXlNRm9YRFRNME1EUXhOVEU1Ck1qUXlNRm93UnpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBY01Da05oYkdsbWIzSnVhV0V4RURBT0JnTlYKQkFvTUIwTnZiWEJoYm5reEVUQVBCZ05WQkFNTUNHWnBiR1ZpWldGME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRgpBQU9DQVE4QU1JSUJDZ0tDQVFFQW93WW9oQ0dBNVYxbzBCL3RodXY3SDd4YXF5TE1CYnRiemNQWUNFUzFVajI0Cis2MWZIeWNuc0ZEVnNxclhmQ1BsOXlRVlhUcjhLWCtxbHlVMjc4RFJ4YjlFUWRiWlZRYlI4WnRKN1pJZVB5T2wKOXVLdUoxSFJzNno3SXJNclQwQks5MkxZTUErUC9kQ1ZjYkJoNzRCVE01azlqYzdyK04rc3FOVWJmcHN6a1E1QQpnWGdVYmhiTUpEcHkvcnRjUTJlbHoxUUFYdTM5QmhGSFY0TDhWcHM4ZjRCTmRCRjhKc01hOFYrbUhjVCtkQ1lXCnJ2SmxCS0VDQllJNHBDb1N0bitJWGNNdndyS0hsZXcwUGo0bHhjUjhsU3c1azBCVWFTL1JFbjFZNVg3S0UxNkkKVmpiRW9LNUlGNlpzZ1BtUUJXalFPbFowcDJreTdTb01yTm9TeXBrVWJ3SURBUUFCTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1RJQU5KMERHQklQYUFZc1hFSzRPb29DeWFFYVMvWFJ4UW1WWlh3OTg2bnFoRXFzaWwzQjNKCm5rdTc5YWE3SXpKcXVBQ3ZwS1FZTXEwVzlJdGdXQisxUkNFdXVUQXRCL0dFYkVlODh6SHk3ckRiWENRM1luTi8KZ25wT01TY3JTRkRoWkJvNEp1R205RkxsMFJHTGRJb1JBVmVoSTFkSjN1VUc5REpVNHF1anFWMk9vUXlIQ0xWRQpmMXFEdkhOcnl0b2N1M3R0WVYyVFlOaXZCR0hRWHo0WjI1R3ltY21zM1ZVUUIzaTFmYmRodCtwOFNRRDdQS05JCnJUK3Z1OE5MK3ZiYzNxUmk3cVpSSW4rcVBnV3JGbEp1SjdGNGRUMGt5aE9xc0Nzd0VSZU1JSmtHRG4vdWhDaXQKZ3BOYzdOdXNSM3RSU2IyRlJyNXk1RU9kbzQrbER3cjkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  node-key.pem: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktVd2dnU2hBZ0VBQW9JQkFRQ0d5R3laSVphVFlRSjUKWmkrdTV2NHdVQ1dCWVFocnpaMjRYb1B0SjNSMUlYdndtYmhKS2w2d05kZnNIOXJjbEM2Sk85cURNd09lMk1mRwpvdjVvSkJJblFteWExQlQxTmVGWUNwZHV2S29KSTRTYzVvaE0zTHZzQXlhNDlNUlFzcEZPaTNETnZUWUl5OUZMCjBkU3VkbmZ2TUhnQVhBYVl3cHRyRTliTXhxOW5VbHBkUWFrNi9SRUtHSkM2a09XL1grcW55RHRVZFdrY0ZSTVcKdlBwSzA5RHQwTGxPaGpma2dObXkrYlZ2dWdHbU1Fa0pDZng3eHgxdUpack5LWVpXK1E4d3JuQkMyWVQ3UTRnWQpNb01IdEk1d2hkM0RwcllVRE5IQ0VnTzZDanVlQm5ORjBFc1B5YlVsR1JWa3dtZHhyamhoODRZdVhRUGxjM0dNCklNeitBQnBUQWdNQkFBRUNnZjhKbi94RnR3ZllDNzMvTjM2Tjh3U0RwcXh5c2FpcmNENzRMSnhWa3RTTWhKSmYKdDJ4V1RlNkhTb1ROblNJQjN0WkFKaVFpdmQ3bGlvanNBM2RsQU5leEpaYjVsa2p5cFpCVDkzSGJ3V21JMmpaVApUR0MydW9PQ3pWWklacXY5WUFUWDArcjhDc1BialRZRk1mam9kdXh1K3RLamtFSzdrbHNWbVh1T2dGNlpKSEJNCmlMb0FrRjVaSEgrODRxZC9JY05UVkpMNGRPSjZJR0xGK2VVREZUd3VkaHBIWDJ3ZUQ5cXFCdjZmQzZtVEhkQmIKa09TNGc5anpRTFZralVBSVhQTG0rbUw5clczcUN4ZDQ3SmoycDFEc0xuczFGbVA2TytUWXZrUUJxZkkxZGdrKworc3hxZHNVMk9GRTVRUnREZVc1anlEWTdlRVJJcXN0U0R1T2RaZ1VDZ1lFQXZkMlZmY3I3UHNGelMzZFZ5S2h2CnJwOFlZTVluTVRDTjFQT2ZkbG5OQVgxSDM5ZjBaSlRlZzZjUjhQQ2Y3ZHYzZjNmbjlLeHYxbERHWU5KeDcrYnIKeXl1YklURmRvcmJIY3RSckhkcW1PUk9CTlZQYW03TkR2NWwzT1FTN2F5T0wweCtjcmI4YTF2dmJoMVpPbDlJcgpqblNRb1FGeDFiUGpxT1VLdG83NW1VMENnWUVBdGJzVytyaW1xS0F6QmkzazduNzZjeE16dWk3Q3VJLzN2REVaCm1HS0Q4Vml6MnJFUjVjWi85SkdRTDJ0ZTgrRnhoT2hKM093RVhtZWI4UUdyZkZrVU9HSmlCUllFeVVNYmVDT3YKZGVaUkFqQ3JObDUvVysxTFJmdHBXd0xRMWdMQ3pFVnVMaEFQS2JhRW5qbnlUbHZPTGJsWmpXVnBMMnlhMGFtNgpNa1pyc2g4Q2dZQU1qOHlFTmhuSlhTTXpxd0dSOVJMdWlyZ2lMdm9JMXgyTEtWTXprVjF1NjhzRmxGUW5FM0psClkzaGNhSThzUFpGeWJZeDdNNjF5a0lXUGdsem5jbS9IVVd0Q0Z2SUxBZXpRUEIyYUxBMHpXWWNDOERsV2M5WFgKcDErcjloUXdVbm05emltZmxUVkJaQWh5TzlPWFYrQnAzR3gxT3BNOWdGbGZvMGZDTEZOM1FRS0JnRVlieGpLMQpkNzRJQjRjenYyVHU0YW54VjN4Vk85Tzkzc0hnWTFKeGR4dHRyLzBIWUxNM1QvZkhERXZ1N1RQQzNtdDZ2YndYCjVWdVNOd3ZVTEJjTnVvcENFalNLR1JDWDdnbjhJbDJtbTh2dmdLMjU2UUpLMmtaR1JvL1ExMFlveklQSHFVamwKOHlPUmdUb1ZldEFXQk1XSkF1NVVtQzZ1aEUrc1hlTzFYU2piQW9HQkFMaVlVcEx3eDM3aWU3T3J6Kzl0WHAyUgpYMjhtRjRWRjF6WUtFTzJObUpGWEU5TjJkTDd6d3JSUVBNeDNjNXo4dDRUYjRPQ0kvRnlCSmc3OVRZLzIvNGQ2CmFuclErUmgzc2gxMU9sS0dFWURJZEpMNEczVk04K3BSd2ZtQ3ZvOWJIV0RDNERWbmU3QWRlS0hrTEtYbTRwem4KUFdpdHB2UnpFbnRMaGt5cTdkOUUKLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
  node.pem: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdNQ0ZEc0xxczVVenRFTEk1VUdUOFNVcnJZVVlPemxNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1FWXgKQ3pBSkJnTlZCQVlUQWxWVE1STXdFUVlEVlFRSERBcERZV3hwWm05eWJtbGhNUkF3RGdZRFZRUUtEQWREYjIxdwpZVzU1TVJBd0RnWURWUVFEREFkeWIyOTBMV05oTUI0WERUSTBNRFF4TnpFNU1qUXhPVm9YRFRNME1EUXhOVEU1Ck1qUXhPVm93VGpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBY01Da05oYkdsbWIzSnVhV0V4RURBT0JnTlYKQkFvTUIwTnZiWEJoYm5reEdEQVdCZ05WQkFNTUR5b3VkMkY2ZFdndGFXNWtaWGhsY2pDQ0FTSXdEUVlKS29aSQpodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUliSWJKa2hscE5oQW5sbUw2N20vakJRSllGaENHdk5uYmhlCmcrMG5kSFVoZS9DWnVFa3FYckExMSt3ZjJ0eVVMb2s3Mm9NekE1N1l4OGFpL21na0VpZENiSnJVRlBVMTRWZ0sKbDI2OHFna2poSnptaUV6Y3Urd0RKcmoweEZDeWtVNkxjTTI5TmdqTDBVdlIxSzUyZCs4d2VBQmNCcGpDbTJzVAoxc3pHcjJkU1dsMUJxVHI5RVFvWWtMcVE1YjlmNnFmSU8xUjFhUndWRXhhOCtrclQwTzNRdVU2R04rU0EyYkw1CnRXKzZBYVl3U1FrSi9IdkhIVzRsbXMwcGhsYjVEekN1Y0VMWmhQdERpQmd5Z3dlMGpuQ0YzY09tdGhRTTBjSVMKQTdvS081NEdjMFhRU3cvSnRTVVpGV1RDWjNHdU9HSHpoaTVkQStWemNZd2d6UDRBR2xNQ0F3RUFBVEFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQXEvQ25KS1ExeXBCNzZnQ1dsRXhtVlB6eWhSeVBlWmtHQ1ZodldoYnY1T1lFCkUyU3dwV21XMFdkaGlEZjM3cU9PeXBwRUJVU2FzekEwZFlyVGZLMGxEM0Jzb1RNeG9LcHRLWGZDRkxKZVBHTjAKbStualR5Vlo3WDJOUndIeE9JWUNETk1QVm5LaTBMRHlpQ3VYY0NheUVvN0l2cWJsRXhrTDJMcTMvcnZZMmZHbgo5TGZ2bG9tdFRnUDRGMyt6QVVUNDVZM0NpRFpJNU5pdGxJZ09oQmkrQTMyY29vamFOMHk2L3BERG9Dd3NKT2xqCnA4S0xidjMxNUdNWGhzeUUwQ3hSUGFtcXRyVlpEQWN0WEU1OTBkZXE1K1MvMmI5OEJXdVlJQUh2cmpwckVrZFEKMXJ0a08wbWtZOVFpTDlqOFhyNkFFUXV4dldpcDRlSXpiZ2VpMUpuYTRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  root-ca.pem: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiVENDQWxXZ0F3SUJBZ0lVZnFkdjZFUjZnV1F6dXVBTUJzMjVaRVdEMTZ3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JqRUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWNNQ2tOaGJHbG1iM0p1YVdFeEVEQU9CZ05WQkFvTQpCME52YlhCaGJua3hFREFPQmdOVkJBTU1CM0p2YjNRdFkyRXdIaGNOTWpRd05ERTNNVGt5TkRFNVdoY05NelF3Ck5ERTFNVGt5TkRFNVdqQkdNUXN3Q1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQnd3S1EyRnNhV1p2Y201cFlURVEKTUE0R0ExVUVDZ3dIUTI5dGNHRnVlVEVRTUE0R0ExVUVBd3dIY205dmRDMWpZVENDQVNJd0RRWUpLb1pJaHZjTgpBUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE16cFBkMUkxM3pvWjdZZzNEWFlHMUh1R1d0dWhsQ1RqSkM0QWZ3CmRtdjloNzBheURmN0k4bndaaEdVeTJwbUdKbzRaandqaHNYSmQ1WVV6OHR3c3ZSaUNPczBTVkZYcXc3cjVUOGMKSUJHS0FOSmN3bFhYcmYrS2EvMGxxSGROcGl2eXFBS3VMbW8rdjN2d3pLcnFYT1JhcjVyQy9aZHlaU1ZENXJvSwp5N3BscVE2dExzWEpCMTZQSC9DUDgyM3p5aFBOaVdRMm5CdWtRMk1Eb1dITzhoUFJWRmNQMjh0YUg1OEtXc2pTClIxQzVGUThaR0Q3VVNVUWFPc3FjOU1pY3AvTGJuU2hiQ2tMdjJTRk5jdXZRTmtEalR0Rm90REp2REdpdTZHQnMKZVBpeTduMWd1T1c3dC9SSWU0TmRiNEwzY3M5eXQ3ZWlSbzNGTW9Cemh5eTlUdmNDQXdFQUFhTlRNRkV3SFFZRApWUjBPQkJZRUZISDhPZHRlL2RBUEVmdnliKzFnbEZ5aWJsZHFNQjhHQTFVZEl3UVlNQmFBRkhIOE9kdGUvZEFQCkVmdnliKzFnbEZ5aWJsZHFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUMzNG1YY3o3U2hwNTZGTjJvSWxQbWVjR1krTnllRllyUGpkZXpFbGNjbThEcnhzNEU3TUxSTnhCUmJlODdmaAozODh1ZVBnWFVRdnRoU1pxN3VEU1lWV0ZRWlVISVJZbGFFNElxTnRRTE9PS0RrSHZwVXlIcSszUGtaZ2R2eEY3CkRibXRyV0JyU0pDN0hIQTV6d0xDTmRtTm1GS2g1ekh4aU9Ud0ljTmN5dmdqSzUzVGRKL2VZQ3QzVVNNNmdhM2MKQndxMm9yZXBSRHhRckVPOG90OThtcmVQS1Bya0ZvazkyY3grRlNQdC9TWEE1MVJSdkxPRThzd0paTGpYcUo4dgpSa1JCK1NjR1Y5aksvT3JGczJIU1ZNZmJpZnFJTmdWb1pvTStPOHVOVmlTMHR3azRMT0Z1MGlIUExqQ08xWDlQCkQwbW5oRkYyZkZRQ2lDTmhaaFlMbUYwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: wazuh/templates/Secrets/scr-cluster-key.yaml
# Copyright (C) 2019, Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Wazuh cluster key secret
apiVersion: v1
kind: Secret
metadata:
  name: wazuh-cluster-key
  namespace: wazuh
data:
  key: MTIzYTQ1YmM2N2RlZjg5MWdoMjNpNDVqazY3bDhtbjk=
---
# Source: wazuh/templates/Secrets/scr-cred-dashboard.yaml
# Copyright (C) 2022 Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Wazuh dashboard API credentials secret
apiVersion: v1
kind: Secret
metadata:
  name: dashboard-cred
data:
  username: a2liYW5hc2VydmVy 
  password: a2liYW5hc2VydmVy
---
# Source: wazuh/templates/Secrets/scr-cred-indexer.yaml
# Copyright (C) 2019, Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Wazuh API credentials secret
apiVersion: v1
kind: Secret
metadata:
  name: indexer-cred
data:
  username: YWRtaW4=
  password: U2VjcmV0UGFzc3dvcmQ=
---
# Source: wazuh/templates/Secrets/scr-cred-wazuh-api.yaml
# Copyright (C) 2019, Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Wazuh API credentials secret
apiVersion: v1
kind: Secret
metadata:
  name: wazuh-api-cred
  namespace: wazuh
data:
  username: d2F6dWgtd3Vp
  password: TXlTM2NyMzdQNDUwci4qLQ==
---
# Source: wazuh/templates/ConfigMaps/conf-dashboard.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-conf
  namespace: wazuh
data: 
  opensearch_dashboards.yml: |2
  
    server.host: 0.0.0.0
    server.port: 5601
    opensearch.hosts: https://indexer:9200
    opensearch.ssl.verificationMode: none
    opensearch.requestHeadersWhitelist: [ authorization,securitytenant ]
    opensearch_security.multitenancy.enabled: false
    opensearch_security.readonly_mode.roles: ["kibana_read_only"]
    server.ssl.enabled: true
    server.ssl.key: "/usr/share/wazuh-dashboard/certs/key.pem"
    server.ssl.certificate: "/usr/share/wazuh-dashboard/certs/cert.pem"
    opensearch.ssl.certificateAuthorities: ["/usr/share/wazuh-dashboard/certs/root-ca.pem"]
    uiSettings.overrides.defaultRoute: /app/wz-home
---
# Source: wazuh/templates/ConfigMaps/conf-indexer.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: indexer-conf
  namespace: wazuh
data:
  opensearch.yml: |
    cluster.name: ${CLUSTER_NAME}
    node.name: ${NODE_NAME}
    network.host: ${NETWORK_HOST}
    discovery.seed_hosts: indexer.wazuh.svc.cluster.local
    cluster.initial_master_nodes:
      - wazuh-indexer-0
  
    node.max_local_storage_nodes: "3"
    path.data: /var/lib/wazuh-indexer
    path.logs: /var/log/wazuh-indexer
    plugins.security.ssl.http.pemcert_filepath: /usr/share/wazuh-indexer/certs/node.pem
    plugins.security.ssl.http.pemkey_filepath: /usr/share/wazuh-indexer/certs/node-key.pem
    plugins.security.ssl.http.pemtrustedcas_filepath: /usr/share/wazuh-indexer/certs/root-ca.pem
    plugins.security.ssl.transport.pemcert_filepath: /usr/share/wazuh-indexer/certs/node.pem
    plugins.security.ssl.transport.pemkey_filepath: /usr/share/wazuh-indexer/certs/node-key.pem
    plugins.security.ssl.transport.pemtrustedcas_filepath: /usr/share/wazuh-indexer/certs/root-ca.pem
    plugins.security.ssl.http.enabled: true
    plugins.security.ssl.transport.enforce_hostname_verification: false
    plugins.security.ssl.transport.resolve_hostname: false
    plugins.security.authcz.admin_dn:
      - CN=admin,O=Company,L=California,C=US
    plugins.security.check_snapshot_restore_write_privileges: true
    plugins.security.enable_snapshot_restore_privilege: true
    plugins.security.nodes_dn:
      - CN=indexer,O=Company,L=California,C=US
    plugins.security.restapi.roles_enabled:
    - "all_access"
    - "security_rest_api_access"
    plugins.security.allow_default_init_securityindex: true
    cluster.routing.allocation.disk.threshold_enabled: false
    compatibility.override_main_response_version: true
  internal_users.yml: |-
    _meta:
      config_version: 2
      type: internalusers
    admin:
      backend_roles:
      - admin
      description: Demo admin user
      hash: $2y$12$K/SpwjtB.wOHJ/Nc6GVRDuc1h0rM1DfvziFRNPtk27P.c4yDr9njO
      reserved: true
    kibanaserver:
      description: Demo kibanaserver user
      hash: $2a$12$4AcgAt3xwOWadA5s5blL6ev39OXDNhmOesEoo33eZtrq2N0YrU3H.
      reserved: true
---
# Source: wazuh/templates/ConfigMaps/conf-master.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: wazuh-conf
  namespace: wazuh
data:
  master.conf: "<!--\n  Wazuh - Manager - Default configuration for ubuntu 16.04\n  More
    info at: https://documentation.wazuh.com\n  Mailing list: https://groups.google.com/forum/#!forum/wazuh\n\n
    \ Customization: TCP on port 1514\n  Customization: Cluster mode enabled, master
    node\n-->\n<ossec_config>\n  <global>\n    <jsonout_output>yes</jsonout_output>\n
    \   <alerts_log>yes</alerts_log>\n    <logall>no</logall>\n    <logall_json>no</logall_json>\n
    \   <email_notification>no</email_notification>\n    <smtp_server>smtp.example.wazuh.com</smtp_server>\n
    \   <email_from>ossecm@example.wazuh.com</email_from>\n    <email_to>recipient@example.wazuh.com</email_to>\n
    \   <email_maxperhour>12</email_maxperhour>\n    <email_log_source>alerts.log</email_log_source>\n
    \   <queue_size>131072</queue_size>\n    <agents_disconnection_time>20s</agents_disconnection_time>\n
    \   <agents_disconnection_alert_time>100s</agents_disconnection_alert_time>\n  </global>\n\n
    \ <alerts>\n    <log_alert_level>3</log_alert_level>\n    <email_alert_level>12</email_alert_level>\n
    \ </alerts>\n\n  <!-- Choose between \"plain\", \"json\", or \"plain,json\" for
    the format of internal logs -->\n  <logging>\n    <log_format>plain</log_format>\n
    \ </logging>\n\n  <remote>\n    <connection>secure</connection>\n    <port>1514</port>\n
    \   <protocol>tcp</protocol>\n    <queue_size>131072</queue_size>\n  </remote>\n\n
    \ <!-- Policy monitoring -->\n  <rootcheck>\n    <disabled>no</disabled>\n    <check_unixaudit>yes</check_unixaudit>\n
    \   <check_files>yes</check_files>\n    <check_trojans>yes</check_trojans>\n    <check_dev>yes</check_dev>\n
    \   <check_sys>yes</check_sys>\n    <check_pids>yes</check_pids>\n    <check_ports>yes</check_ports>\n
    \   <check_if>yes</check_if>\n\n    <!-- Frequency that rootcheck is executed -
    every 12 hours -->\n    <frequency>43200</frequency>\n\n    <rootkit_files>/var/ossec/etc/rootcheck/rootkit_files.txt</rootkit_files>\n
    \   <rootkit_trojans>/var/ossec/etc/rootcheck/rootkit_trojans.txt</rootkit_trojans>\n\n
    \   <system_audit>/var/ossec/etc/rootcheck/system_audit_rcl.txt</system_audit>\n
    \   <system_audit>/var/ossec/etc/rootcheck/system_audit_ssh.txt</system_audit>\n\n
    \   <skip_nfs>yes</skip_nfs>\n  </rootcheck>\n\n  <wodle name=\"open-scap\">\n    <disabled>yes</disabled>\n
    \   <timeout>1800</timeout>\n    <interval>1d</interval>\n    <scan-on-start>yes</scan-on-start>\n
    \ </wodle>\n\n  <wodle name=\"cis-cat\">\n    <disabled>yes</disabled>\n    <timeout>1800</timeout>\n
    \   <interval>1d</interval>\n    <scan-on-start>yes</scan-on-start>\n\n    <java_path>wodles/java</java_path>\n
    \   <ciscat_path>wodles/ciscat</ciscat_path>\n  </wodle>\n\n  <!-- Osquery integration
    -->\n  <wodle name=\"osquery\">\n    <disabled>yes</disabled>\n    <run_daemon>yes</run_daemon>\n
    \   <log_path>/var/log/osquery/osqueryd.results.log</log_path>\n    <config_path>/etc/osquery/osquery.conf</config_path>\n
    \   <add_labels>yes</add_labels>\n  </wodle>\n\n  <!-- System inventory -->\n  <wodle
    name=\"syscollector\">\n    <disabled>no</disabled>\n    <interval>1h</interval>\n
    \   <scan_on_start>yes</scan_on_start>\n    <hardware>yes</hardware>\n    <os>yes</os>\n
    \   <network>yes</network>\n    <packages>yes</packages>\n    <ports all=\"no\">yes</ports>\n
    \   <processes>yes</processes>\n  </wodle>\n\n  <vulnerability-detection>\n    <enabled>yes</enabled>\n
    \   <index-status>yes</index-status>\n    <feed-update-interval>60m</feed-update-interval>\n
    \ </vulnerability-detection>\n\n  <indexer>\n    <enabled>yes</enabled>\n    <hosts>\n
    \     <host>https://indexer:9200</host>\n    </hosts>\n    <ssl>\n      <certificate_authorities>\n
    \       <ca>/etc/ssl/root-ca.pem</ca>\n      </certificate_authorities>\n      <certificate>/etc/ssl/filebeat.pem</certificate>\n
    \     <key>/etc/ssl/filebeat.key</key>\n    </ssl>\n  </indexer>\n\n  <!-- File
    integrity monitoring -->\n  <syscheck>\n    <disabled>no</disabled>\n\n    <!--
    Frequency that syscheck is executed default every 12 hours -->\n    <frequency>43200</frequency>\n\n
    \   <scan_on_start>yes</scan_on_start>\n\n    <!-- Generate alert when new file
    detected -->\n    <alert_new_files>yes</alert_new_files>\n\n    <!-- Don't ignore
    files that change more than 'frequency' times -->\n    <auto_ignore frequency=\"10\"
    timeframe=\"3600\">no</auto_ignore>\n\n    <!-- Directories to check  (perform all
    possible verifications) -->\n    <directories check_all=\"yes\">/etc,/usr/bin,/usr/sbin</directories>\n
    \   <directories check_all=\"yes\">/bin,/sbin,/boot</directories>\n\n    <!-- Files/directories
    to ignore -->\n    <ignore>/etc/mtab</ignore>\n    <ignore>/etc/hosts.deny</ignore>\n
    \   <ignore>/etc/mail/statistics</ignore>\n    <ignore>/etc/random-seed</ignore>\n
    \   <ignore>/etc/random.seed</ignore>\n    <ignore>/etc/adjtime</ignore>\n    <ignore>/etc/httpd/logs</ignore>\n
    \   <ignore>/etc/utmpx</ignore>\n    <ignore>/etc/wtmpx</ignore>\n    <ignore>/etc/cups/certs</ignore>\n
    \   <ignore>/etc/dumpdates</ignore>\n    <ignore>/etc/svc/volatile</ignore>\n    <ignore>/sys/kernel/security</ignore>\n
    \   <ignore>/sys/kernel/debug</ignore>\n\n    <!-- Check the file, but never compute
    the diff -->\n    <nodiff>/etc/ssl/private.key</nodiff>\n\n    <skip_nfs>yes</skip_nfs>\n\n
    \   <!-- Remove not monitored files -->\n    <remove_old_diff>yes</remove_old_diff>\n\n
    \   <!-- Allow the system to restart Auditd after installing the plugin -->\n    <restart_audit>yes</restart_audit>\n
    \ </syscheck>\n\n  <!-- Active response -->\n  <global>\n    <white_list>127.0.0.1</white_list>\n
    \   <white_list>^localhost.localdomain$</white_list>\n    <white_list>10.66.0.2</white_list>\n
    \ </global>\n\n  <command>\n    <name>disable-account</name>\n    <executable>disable-account.sh</executable>\n
    \   <expect>user</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>restart-ossec</name>\n    <executable>restart-ossec.sh</executable>\n
    \   <expect></expect>\n  </command>\n\n  <command>\n    <name>firewall-drop</name>\n
    \   <executable>firewall-drop</executable>\n    <timeout_allowed>yes</timeout_allowed>\n
    \ </command>\n\n  <command>\n    <name>host-deny</name>\n    <executable>host-deny.sh</executable>\n
    \   <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>route-null</name>\n    <executable>route-null.sh</executable>\n
    \   <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>win_route-null</name>\n    <executable>route-null.cmd</executable>\n
    \   <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>win_route-null-2012</name>\n    <executable>route-null-2012.cmd</executable>\n
    \   <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>netsh</name>\n    <executable>netsh.cmd</executable>\n    <expect>srcip</expect>\n
    \   <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n  <command>\n    <name>netsh-win-2016</name>\n
    \   <executable>netsh-win-2016.cmd</executable>\n    <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n
    \ </command>\n\n  <!--\n  <active-response>\n    active-response options here\n
    \ </active-response>\n  -->\n\n  <!-- Log analysis -->\n  <localfile>\n    <log_format>command</log_format>\n
    \   <command>df -P</command>\n    <frequency>360</frequency>\n  </localfile>\n\n
    \ <localfile>\n    <log_format>full_command</log_format>\n    <command>netstat -tulpn
    | sed 's/\\([[:alnum:]]\\+\\)\\ \\+[[:digit:]]\\+\\ \\+[[:digit:]]\\+\\ \\+\\(.*\\):\\([[:digit:]]*\\)\\
    \\+\\([0-9\\.\\:\\*]\\+\\).\\+\\ \\([[:digit:]]*\\/[[:alnum:]\\-]*\\).*/\\1 \\2
    == \\3 == \\4 \\5/' | sort -k 4 -g | sed 's/ == \\(.*\\) ==/:\\1/' | sed 1,2d</command>\n
    \   <alias>netstat listening ports</alias>\n    <frequency>360</frequency>\n  </localfile>\n\n
    \ <localfile>\n    <log_format>full_command</log_format>\n    <command>last -n 20</command>\n
    \   <frequency>360</frequency>\n  </localfile>\n\n  <ruleset>\n    <!-- Default
    ruleset -->\n    <decoder_dir>ruleset/decoders</decoder_dir>\n    <rule_dir>ruleset/rules</rule_dir>\n
    \   <rule_exclude>0215-policy_rules.xml</rule_exclude>\n    <list>etc/lists/audit-keys</list>\n
    \   <list>etc/lists/amazon/aws-sources</list>\n    <list>etc/lists/amazon/aws-eventnames</list>\n\n
    \   <!-- User-defined ruleset -->\n    <decoder_dir>etc/decoders</decoder_dir>\n
    \   <rule_dir>etc/rules</rule_dir>\n  </ruleset>\n\n  <rule_test>\n\t    <enabled>yes</enabled>\n\t
    \   <threads>1</threads>\n\t    <max_sessions>64</max_sessions>\n\t    <session_timeout>15m</session_timeout>\n
    \ </rule_test>\n\n  <!-- Configuration for ossec-authd\n    To enable this service,
    run:\n    wazuh-control enable auth\n  -->\n  <auth>\n    <disabled>no</disabled>\n
    \   <port>1515</port>\n    <use_source_ip>no</use_source_ip>\n    <force>\n      <enabled>yes</enabled>\n
    \     <key_mismatch>yes</key_mismatch>\n      <disconnected_time enabled=\"yes\">1h</disconnected_time>\n
    \     <after_registration_time>1h</after_registration_time>\n    </force>\n    <purge>no</purge>\n
    \   <use_password>yes</use_password>\n    <ciphers>HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH</ciphers>\n
    \   <!-- <ssl_agent_ca></ssl_agent_ca> -->\n    <ssl_verify_host>no</ssl_verify_host>\n
    \   <ssl_manager_cert>/var/ossec/etc/sslmanager.cert</ssl_manager_cert>\n    <ssl_manager_key>/var/ossec/etc/sslmanager.key</ssl_manager_key>\n
    \   <ssl_auto_negotiate>no</ssl_auto_negotiate>\n  </auth>\n\n  <cluster>\n    <name>wazuh</name>\n
    \   <node_name>wazuh-manager-master</node_name>\n    <node_type>master</node_type>\n
    \   <key>to_be_replaced_by_cluster_key</key>\n    <port>1516</port>\n    <bind_addr>0.0.0.0</bind_addr>\n
    \   <nodes>\n        <node>wazuh-manager-master-0.wazuh-cluster.wazuh</node>\n    </nodes>\n
    \   <hidden>no</hidden>\n    <disabled>no</disabled>\n  </cluster>\n</ossec_config>\n\n<ossec_config>\n
    \ <localfile>\n    <log_format>syslog</log_format>\n    <location>/var/ossec/logs/active-responses.log</location>\n
    \ </localfile>\n\n</ossec_config>\n"
  worker.conf: "<!--\n  Wazuh - Manager - Default configuration for ubuntu 16.04\n  More
    info at: https://documentation.wazuh.com\n  Mailing list: https://groups.google.com/forum/#!forum/wazuh\n\n
    \ Customization: TCP on port 1514\n  Customization: Cluster mode enabled, worker
    node\n-->\n<ossec_config>\n  <global>\n    <jsonout_output>yes</jsonout_output>\n
    \   <alerts_log>yes</alerts_log>\n    <logall>no</logall>\n    <logall_json>no</logall_json>\n
    \   <email_notification>no</email_notification>\n    <smtp_server>smtp.example.wazuh.com</smtp_server>\n
    \   <email_from>ossecm@example.wazuh.com</email_from>\n    <email_to>recipient@example.wazuh.com</email_to>\n
    \   <email_maxperhour>12</email_maxperhour>\n    <email_log_source>alerts.log</email_log_source>\n
    \   <queue_size>131072</queue_size>\n    <agents_disconnection_time>20s</agents_disconnection_time>\n
    \   <agents_disconnection_alert_time>100s</agents_disconnection_alert_time>\n  </global>\n\n
    \ <alerts>\n    <log_alert_level>3</log_alert_level>\n    <email_alert_level>12</email_alert_level>\n
    \ </alerts>\n\n  <!-- Choose between \"plain\", \"json\", or \"plain,json\" for
    the format of internal logs -->\n  <logging>\n    <log_format>plain</log_format>\n
    \ </logging>\n\n  <remote>\n    <connection>secure</connection>\n    <port>1514</port>\n
    \   <protocol>tcp</protocol>\n    <queue_size>131072</queue_size>\n  </remote>\n\n
    \ <!-- Policy monitoring -->\n  <rootcheck>\n    <disabled>no</disabled>\n    <check_unixaudit>yes</check_unixaudit>\n
    \   <check_files>yes</check_files>\n    <check_trojans>yes</check_trojans>\n    <check_dev>yes</check_dev>\n
    \   <check_sys>yes</check_sys>\n    <check_pids>yes</check_pids>\n    <check_ports>yes</check_ports>\n
    \   <check_if>yes</check_if>\n\n    <!-- Frequency that rootcheck is executed -
    every 12 hours -->\n    <frequency>43200</frequency>\n\n    <rootkit_files>/var/ossec/etc/rootcheck/rootkit_files.txt</rootkit_files>\n
    \   <rootkit_trojans>/var/ossec/etc/rootcheck/rootkit_trojans.txt</rootkit_trojans>\n\n
    \   <system_audit>/var/ossec/etc/rootcheck/system_audit_rcl.txt</system_audit>\n
    \   <system_audit>/var/ossec/etc/rootcheck/system_audit_ssh.txt</system_audit>\n\n
    \   <skip_nfs>yes</skip_nfs>\n  </rootcheck>\n\n  <wodle name=\"open-scap\">\n    <disabled>yes</disabled>\n
    \   <timeout>1800</timeout>\n    <interval>1d</interval>\n    <scan-on-start>yes</scan-on-start>\n
    \ </wodle>\n\n  <wodle name=\"cis-cat\">\n    <disabled>yes</disabled>\n    <timeout>1800</timeout>\n
    \   <interval>1d</interval>\n    <scan-on-start>yes</scan-on-start>\n\n    <java_path>wodles/java</java_path>\n
    \   <ciscat_path>wodles/ciscat</ciscat_path>\n  </wodle>\n\n  <!-- Osquery integration
    -->\n  <wodle name=\"osquery\">\n    <disabled>yes</disabled>\n    <run_daemon>yes</run_daemon>\n
    \   <log_path>/var/log/osquery/osqueryd.results.log</log_path>\n    <config_path>/etc/osquery/osquery.conf</config_path>\n
    \   <add_labels>yes</add_labels>\n  </wodle>\n\n  <!-- System inventory -->\n  <wodle
    name=\"syscollector\">\n    <disabled>no</disabled>\n    <interval>1h</interval>\n
    \   <scan_on_start>yes</scan_on_start>\n    <hardware>yes</hardware>\n    <os>yes</os>\n
    \   <network>yes</network>\n    <packages>yes</packages>\n    <ports all=\"no\">yes</ports>\n
    \   <processes>yes</processes>\n  </wodle>\n\n  <vulnerability-detection>\n    <enabled>yes</enabled>\n
    \   <index-status>yes</index-status>\n    <feed-update-interval>60m</feed-update-interval>\n
    \ </vulnerability-detection>\n\n  <indexer>\n    <enabled>yes</enabled>\n    <hosts>\n
    \     <host>https://indexer:9200</host>\n    </hosts>\n    <ssl>\n      <certificate_authorities>\n
    \       <ca>/etc/ssl/root-ca.pem</ca>\n      </certificate_authorities>\n      <certificate>/etc/ssl/filebeat.pem</certificate>\n
    \     <key>/etc/ssl/filebeat.key</key>\n    </ssl>\n  </indexer>\n\n  <!-- File
    integrity monitoring -->\n  <syscheck>\n    <disabled>no</disabled>\n\n    <!--
    Frequency that syscheck is executed default every 12 hours -->\n    <frequency>43200</frequency>\n\n
    \   <scan_on_start>yes</scan_on_start>\n\n    <!-- Generate alert when new file
    detected -->\n    <alert_new_files>yes</alert_new_files>\n\n    <!-- Don't ignore
    files that change more than 'frequency' times -->\n    <auto_ignore frequency=\"10\"
    timeframe=\"3600\">no</auto_ignore>\n\n    <!-- Directories to check  (perform all
    possible verifications) -->\n    <directories check_all=\"yes\">/etc,/usr/bin,/usr/sbin</directories>\n
    \   <directories check_all=\"yes\">/bin,/sbin,/boot</directories>\n\n    <!-- Files/directories
    to ignore -->\n    <ignore>/etc/mtab</ignore>\n    <ignore>/etc/hosts.deny</ignore>\n
    \   <ignore>/etc/mail/statistics</ignore>\n    <ignore>/etc/random-seed</ignore>\n
    \   <ignore>/etc/random.seed</ignore>\n    <ignore>/etc/adjtime</ignore>\n    <ignore>/etc/httpd/logs</ignore>\n
    \   <ignore>/etc/utmpx</ignore>\n    <ignore>/etc/wtmpx</ignore>\n    <ignore>/etc/cups/certs</ignore>\n
    \   <ignore>/etc/dumpdates</ignore>\n    <ignore>/etc/svc/volatile</ignore>\n    <ignore>/sys/kernel/security</ignore>\n
    \   <ignore>/sys/kernel/debug</ignore>\n\n    <!-- Check the file, but never compute
    the diff -->\n    <nodiff>/etc/ssl/private.key</nodiff>\n\n    <skip_nfs>yes</skip_nfs>\n\n
    \   <!-- Remove not monitored files -->\n    <remove_old_diff>yes</remove_old_diff>\n\n
    \   <!-- Allow the system to restart Auditd after installing the plugin -->\n    <restart_audit>yes</restart_audit>\n
    \ </syscheck>\n\n  <!-- Active response -->\n  <global>\n    <white_list>127.0.0.1</white_list>\n
    \   <white_list>^localhost.localdomain$</white_list>\n    <white_list>10.66.0.2</white_list>\n
    \ </global>\n\n  <command>\n    <name>disable-account</name>\n    <executable>disable-account.sh</executable>\n
    \   <expect>user</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>restart-ossec</name>\n    <executable>restart-ossec.sh</executable>\n
    \   <expect></expect>\n  </command>\n\n  <command>\n    <name>firewall-drop</name>\n
    \   <executable>firewall-drop</executable>\n    <timeout_allowed>yes</timeout_allowed>\n
    \ </command>\n\n  <command>\n    <name>host-deny</name>\n    <executable>host-deny.sh</executable>\n
    \   <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>route-null</name>\n    <executable>route-null.sh</executable>\n
    \   <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>win_route-null</name>\n    <executable>route-null.cmd</executable>\n
    \   <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>win_route-null-2012</name>\n    <executable>route-null-2012.cmd</executable>\n
    \   <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n
    \ <command>\n    <name>netsh</name>\n    <executable>netsh.cmd</executable>\n    <expect>srcip</expect>\n
    \   <timeout_allowed>yes</timeout_allowed>\n  </command>\n\n  <command>\n    <name>netsh-win-2016</name>\n
    \   <executable>netsh-win-2016.cmd</executable>\n    <expect>srcip</expect>\n    <timeout_allowed>yes</timeout_allowed>\n
    \ </command>\n\n  <!--\n  <active-response>\n    active-response options here\n
    \ </active-response>\n  -->\n\n  <!-- Log analysis -->\n  <localfile>\n    <log_format>command</log_format>\n
    \   <command>df -P</command>\n    <frequency>360</frequency>\n  </localfile>\n\n
    \ <localfile>\n    <log_format>full_command</log_format>\n    <command>netstat -tulpn
    | sed 's/\\([[:alnum:]]\\+\\)\\ \\+[[:digit:]]\\+\\ \\+[[:digit:]]\\+\\ \\+\\(.*\\):\\([[:digit:]]*\\)\\
    \\+\\([0-9\\.\\:\\*]\\+\\).\\+\\ \\([[:digit:]]*\\/[[:alnum:]\\-]*\\).*/\\1 \\2
    == \\3 == \\4 \\5/' | sort -k 4 -g | sed 's/ == \\(.*\\) ==/:\\1/' | sed 1,2d</command>\n
    \   <alias>netstat listening ports</alias>\n    <frequency>360</frequency>\n  </localfile>\n\n
    \ <localfile>\n    <log_format>full_command</log_format>\n    <command>last -n 20</command>\n
    \   <frequency>360</frequency>\n  </localfile>\n\n  <ruleset>\n    <!-- Default
    ruleset -->\n    <decoder_dir>ruleset/decoders</decoder_dir>\n    <rule_dir>ruleset/rules</rule_dir>\n
    \   <rule_exclude>0215-policy_rules.xml</rule_exclude>\n    <list>etc/lists/audit-keys</list>\n
    \   <list>etc/lists/amazon/aws-sources</list>\n    <list>etc/lists/amazon/aws-eventnames</list>\n\n
    \   <!-- User-defined ruleset -->\n    <decoder_dir>etc/decoders</decoder_dir>\n
    \   <rule_dir>etc/rules</rule_dir>\n  </ruleset>\n\n  <rule_test>\n\t    <enabled>yes</enabled>\n\t
    \   <threads>1</threads>\n\t    <max_sessions>64</max_sessions>\n\t    <session_timeout>15m</session_timeout>\n
    \ </rule_test>\n\n  <!-- Configuration for ossec-authd\n    To enable this service,
    run:\n    wazuh-control enable auth\n  -->\n  <auth>\n    <disabled>no</disabled>\n
    \   <port>1515</port>\n    <use_source_ip>no</use_source_ip>\n    <force>\n      <enabled>yes</enabled>\n
    \     <key_mismatch>yes</key_mismatch>\n      <disconnected_time enabled=\"yes\">1h</disconnected_time>\n
    \     <after_registration_time>1h</after_registration_time>\n    </force>\n    <purge>no</purge>\n
    \   <use_password>no</use_password>\n    <ciphers>HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH</ciphers>\n
    \   <!-- <ssl_agent_ca></ssl_agent_ca> -->\n    <ssl_verify_host>no</ssl_verify_host>\n
    \   <ssl_manager_cert>/var/ossec/etc/sslmanager.cert</ssl_manager_cert>\n    <ssl_manager_key>/var/ossec/etc/sslmanager.key</ssl_manager_key>\n
    \   <ssl_auto_negotiate>no</ssl_auto_negotiate>\n  </auth>\n\n  <cluster>\n    <name>wazuh</name>\n
    \   <node_name>to_be_replaced_by_hostname</node_name>\n    <node_type>worker</node_type>\n
    \   <key>to_be_replaced_by_cluster_key</key>\n    <port>1516</port>\n    <bind_addr>0.0.0.0</bind_addr>\n
    \   <nodes>\n        <node>wazuh-manager-master-0.wazuh-cluster.wazuh</node>\n    </nodes>\n
    \   <hidden>no</hidden>\n    <disabled>no</disabled>\n  </cluster>\n</ossec_config>\n\n<ossec_config>\n
    \ <localfile>\n    <log_format>syslog</log_format>\n    <location>/var/ossec/logs/active-responses.log</location>\n
    \ </localfile>\n\n</ossec_config>\n"
---
# Source: wazuh/templates/StorageClass/storage-class.yaml
# Copyright (C) 2019, Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Wazuh StorageClass
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: wazuh-storage
provisioner: ebs.csi.aws.com 
allowVolumeExpansion: true
parameters:
  encrypted: 'true'
  type: gp3
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
---
# Source: wazuh/templates/PersistantVolumeClaims/indexer-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wazuh-indexer
  namespace: indexer-cluster
  labels:
    app: wazuh-indexer
  spec:
    accessModes:
      - ReadWriteOnce
    storageClassName: wazuh-storage
    resources:
      requests:
        storage: 500Mi
---
# Source: wazuh/templates/PersistantVolumeClaims/master-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wazuh-manager-master
  namespace: wazuh
  labels:
    app: wazuh-manager
    node-type: master
  spec:
    accessModes:
      - ReadWriteOnce
    storageClassName: wazuh-storage
    resources:
      requests:
        storage: 500Mi
---
# Source: wazuh/templates/PersistantVolumeClaims/worker-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wazuh-manager-worker
  namespace: wazuh
  labels:
    app: wazuh-manager
    node-type: worker
  spec:
    accessModes:
      - ReadWriteOnce
    storageClassName: wazuh-storage
    resources:
      requests:
        storage: 500Mi
---
# Source: wazuh/templates/Services/svc-dashboard.yaml
apiVersion: v1
kind: Service
metadata:
  name: dashboard
  namespace: wazuh
  labels:
    app: wazuh-dashboard
    # dns: route53
spec:
  type: ClusterIP
  selector:
    app: wazuh-dashboard
  ports:
    - name: dashboard
      port: 5601
      targetPort: 5601
---
# Source: wazuh/templates/Services/svc-indexer.yaml
apiVersion: v1
kind: Service
metadata:
  name: indexer
  namespace: wazuh
  labels:
    app: wazuh-indexer
#
spec:
  type: ClusterIP
  selector:
    app: wazuh-indexer
  ports:
    - name: indexer-rest
      port: 9200
      targetPort: 9200
---
# Source: wazuh/templates/Services/svc-wazuh-cluster.yaml
apiVersion: v1
kind: Service
metadata:
  name: wazuh-cluster
  namespace: wazuh
  labels:
    app: wazuh-manager
#
spec:
  selector:
    app: wazuh-manager
  ports:
    - name: cluster
      port: 1516
      targetPort: 1516
  clusterIP: None
---
# Source: wazuh/templates/Services/svc-wazuh-indexer.yaml
apiVersion: v1
kind: Service
metadata:
  name: wazuh-indexer
  namespace: wazuh
  labels:
    app: wazuh-indexer
#
spec:
  selector:
    app: wazuh-indexer
  ports:
    - name: indexer-nodes
      port: 9300
      targetPort: 9300
  clusterIP: None
---
# Source: wazuh/templates/Services/svc-wazuh-master.yaml
apiVersion: v1
kind: Service
metadata:
  name: wazuh  # Don't change, unless you update the Wazuh dashboard app config
  namespace: wazuh
  labels:
    app: wazuh-manager
    # dns: 
spec:
  type: ClusterIP
  selector:
    app: wazuh-manager
    node-type: master
  ports:
    - name: api
      port: 55000
      targetPort: 55000
---
# Source: wazuh/templates/Services/svc-wazuh-workers.yaml
apiVersion: v1
kind: Service
metadata:
  name: wazuh-workers
  namespace: wazuh
  labels:
    app: wazuh-manager
    # dns: route53
spec:
  type: LoadBalancer
  selector:
    app: wazuh-manager
  ports:
    - name: agents-events
      port: 1514
      targetPort: 1514
    - name: registration
      port: 1515
      targetPort: 1515
---
# Source: wazuh/templates/Deployments/dpy-dashboard.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wazuh-dashboard
  namespace: wazuh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wazuh-dashboard
  template:
    metadata:
      labels:
        app: wazuh-dashboard
      name: wazuh-dashboard
    spec:
      volumes:
        - name: config
          configMap:
            name: dashboard-conf
        - name: dashboard-certs
          secret:
            secretName: dashboard-certs
      containers:
        - name: wazuh-dashboard
          image: "wazuh/wazuh-dashboard:4.8.0" 
          resources:
            limits:
              cpu: 400m
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 512Mi
          volumeMounts:
            - name: config
              mountPath: /usr/share/wazuh-dashboard/config/opensearch_dashboards.yml
              subPath: opensearch_dashboards.yml
              readOnly: false
            - name: dashboard-certs
              mountPath: /usr/share/wazuh-dashboard/certs/cert.pem
              readOnly: true
              subPath: cert.pem
            - name: dashboard-certs
              mountPath: /usr/share/wazuh-dashboard/certs/key.pem
              readOnly: true
              subPath: key.pem
            - name: dashboard-certs
              mountPath: /usr/share/wazuh-dashboard/certs/root-ca.pem
              subPath: root-ca.pem
              readOnly: true
          ports:
            - containerPort: 5601
              name: dashboard
          env:
            - name: INDEXER_URL
              value: https://indexer:9200
            - name: INDEXER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: indexer-cred
                  key: username
            - name: INDEXER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: indexer-cred
                  key: password
            - name: DASHBOARD_USERNAME
              valueFrom:
                secretKeyRef:
                  name: dashboard-cred
                  key: username
            - name: DASHBOARD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dashboard-cred
                  key: password
            - name: SERVER_SSL_ENABLED
              value: "true"
            - name: SERVER_SSL_CERTIFICATE
              value: /usr/share/wazuh-dashboard/certs/cert.pem
            - name: SERVER_SSL_KEY
              value: /usr/share/wazuh-dashboard/certs/key.pem
            - name: WAZUH_API_URL
              value: https://wazuh.wazuh.svc.cluster.local
            - name: API_USERNAME
              valueFrom:
                secretKeyRef:
                  name: wazuh-api-cred
                  key: username
            - name: API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wazuh-api-cred
                  key: password
---
# Source: wazuh/templates/StatefulSets/sts-wazuh-indexer.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wazuh-indexer
  namespace: wazuh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wazuh-indexer
  serviceName: wazuh-indexer
  template:
    metadata:
      labels:
        app: wazuh-indexer
      name: wazuh-indexer
    spec:
      # Set the wazuh-indexer volume permissions so the wazuh-indexer user can use it
      volumes:
        - name: indexer-certs
          secret:
            secretName: indexer-certs
        - name: indexer-conf
          configMap:
            name: indexer-conf
      initContainers:
        - name: volume-mount-hack
          image: busybox
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
          command:
            - sh
            - '-c'
            - 'chown -R 1000:1000 /var/lib/wazuh-indexer'
          volumeMounts:
            - name: wazuh-indexer
              mountPath: /var/lib/wazuh-indexer
        - name: increase-the-vm-max-map-count
          image: busybox
          command:
            - sysctl
            - -w
            - vm.max_map_count=262144
          securityContext:
            privileged: true
      containers:
        - name: wazuh-indexer
          image: "wazuh/wazuh-indexer:4.8.0"
          env:
            - name: OPENSEARCH_JAVA_OPTS
              value: '-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true'
            - name: CLUSTER_NAME
              value: wazuh
            - name: NETWORK_HOST
              value: "0.0.0.0"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DISCOVERY_SERVICE
              value: wazuh-indexer
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DISABLE_INSTALL_DEMO_CONFIG
              value: 'true'
          securityContext:
            capabilities:
              add: ["SYS_CHROOT"]
          volumeMounts:
            - name: wazuh-indexer
              mountPath: /var/lib/wazuh-indexer
            - name: indexer-certs
              mountPath: /usr/share/wazuh-indexer/certs/node-key.pem
              subPath: node-key.pem
              readOnly: true
            - name: indexer-certs
              mountPath: /usr/share/wazuh-indexer/certs/node.pem
              subPath: node.pem
              readOnly: true
            - name: indexer-certs
              mountPath: /usr/share/wazuh-indexer/certs/root-ca.pem
              subPath: root-ca.pem
              readOnly: true
            - name: indexer-certs
              mountPath: /usr/share/wazuh-indexer/certs/admin.pem
              subPath: admin.pem
              readOnly: true
            - name: indexer-certs
              mountPath: /usr/share/wazuh-indexer/certs/admin-key.pem
              subPath: admin-key.pem
              readOnly: true
            - name: indexer-conf
              mountPath: /usr/share/wazuh-indexer/opensearch.yml
              subPath: opensearch.yml
              readOnly: true
            - name: indexer-conf
              mountPath: /usr/share/wazuh-indexer/opensearch-security/internal_users.yml
              subPath: internal_users.yml
              readOnly: true
          ports:
            - containerPort: 9200
              name: indexer-rest
            - containerPort: 9300
              name: indexer-nodes
  volumeClaimTemplates:
    claimName: "wazuh-indexer"
---
# Source: wazuh/templates/StatefulSets/sts-wazuh-master.yaml
# Copyright (C) 2019, Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Wazuh master StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wazuh-manager-master
  namespace: wazuh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wazuh-manager
      node-type: master
  serviceName: wazuh-cluster
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: wazuh-manager
        node-type: master
      name: wazuh-manager-master
    spec:
      volumes:
        - name: config
          configMap:
            name: wazuh-conf
        - name: filebeat-certs
          secret:
            secretName: indexer-certs
        - name: wazuh-authd-pass
          secret:
            secretName: wazuh-authd-pass
      securityContext:
        fsGroup: 101
      containers:
        - name: wazuh-manager
          image: "wazuh/wazuh-manager:4.8.0"
          resources: 
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 1
              memory: 1Gi
          securityContext:
            capabilities:
              add: ["SYS_CHROOT"]
          volumeMounts:
            - name: config
              mountPath: /wazuh-config-mount/etc/ossec.conf
              subPath: master.conf
              readOnly: true
            - name: filebeat-certs
              mountPath: /etc/ssl/root-ca.pem
              readOnly: true
              subPath: root-ca.pem
            - name: filebeat-certs
              mountPath: /etc/ssl/filebeat.pem
              subPath: filebeat.pem
              readOnly: true
            - name: filebeat-certs
              mountPath: /etc/ssl/filebeat.key
              subPath: filebeat-key.pem
              readOnly: true
            - name: wazuh-authd-pass
              mountPath: /wazuh-config-mount/etc/authd.pass
              subPath: authd.pass
              readOnly: true
            - name: wazuh-manager-master
              mountPath: /var/ossec/api/configuration
              subPath: wazuh/var/ossec/api/configuration
            - name: wazuh-manager-master
              mountPath: /var/ossec/etc
              subPath: wazuh/var/ossec/etc
            - name: wazuh-manager-master
              mountPath: /var/ossec/logs
              subPath: wazuh/var/ossec/logs
            - name: wazuh-manager-master
              mountPath: /var/ossec/queue
              subPath: wazuh/var/ossec/queue
            - name: wazuh-manager-master
              mountPath: /var/ossec/var/multigroups
              subPath: wazuh/var/ossec/var/multigroups
            - name: wazuh-manager-master
              mountPath: /var/ossec/integrations
              subPath: wazuh/var/ossec/integrations
            - name: wazuh-manager-master
              mountPath: /var/ossec/active-response/bin
              subPath: wazuh/var/ossec/active-response/bin
            - name: wazuh-manager-master
              mountPath: /var/ossec/agentless
              subPath: wazuh/var/ossec/agentless
            - name: wazuh-manager-master
              mountPath: /var/ossec/wodles
              subPath: wazuh/var/ossec/wodles
            - name: wazuh-manager-master
              mountPath: /etc/filebeat
              subPath: filebeat/etc/filebeat
            - name: wazuh-manager-master
              mountPath: /var/lib/filebeat
              subPath: filebeat/var/lib/filebeat
          ports: 
            - containerPort: 1515
              name: registration
            - containerPort: 1516
              name: cluster
            - containerPort: 55000
              name: api
          env:
            - name: INDEXER_URL
              value: https://indexer:9200
            - name: INDEXER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: indexer-cred
                  key: username
            - name: INDEXER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: indexer-cred
                  key: password
            - name: FILEBEAT_SSL_VERIFICATION_MODE
              value: 'full'
            - name: SSL_CERTIFICATE_AUTHORITIES
              value: /etc/ssl/root-ca.pem
            - name: SSL_CERTIFICATE
              value: /etc/ssl/filebeat.pem
            - name: SSL_KEY
              value: /etc/ssl/filebeat.key
            - name: API_USERNAME
              valueFrom:
                secretKeyRef:
                  name: wazuh-api-cred
                  key: username
            - name: API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wazuh-api-cred
                  key: password
            - name: WAZUH_CLUSTER_KEY
              valueFrom:
                secretKeyRef:
                  name: wazuh-cluster-key
                  key: key
  volumeClaimTemplates:
    claimName: "wazuh-manager-master"
---
# Source: wazuh/templates/StatefulSets/sts-wazuh-worker.yaml
# Copyright (C) 2019, Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Wazuh workers StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wazuh-manager-worker
  namespace: wazuh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wazuh-manager
      node-type: worker
  serviceName: wazuh-cluster
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: wazuh-manager
        node-type: worker
      name: wazuh-manager-worker
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
      volumes:
        - name: config
          configMap:
            name: wazuh-conf
        - name: filebeat-certs
          secret:
            secretName: indexer-certs
      securityContext:
        fsGroup: 101
      containers:
        - name: wazuh-manager
          image: "wazuh/wazuh-manager:4.8.0"
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 1
              memory: 1Gi
          securityContext:
            capabilities:
              add: ["SYS_CHROOT"]
          volumeMounts:
            - name: config
              mountPath: /wazuh-config-mount/etc/ossec.conf
              subPath: worker.conf
              readOnly: true
            - name: filebeat-certs
              mountPath: /etc/ssl/root-ca.pem
              readOnly: true
              subPath: root-ca.pem
            - name: filebeat-certs
              mountPath: /etc/ssl/filebeat.pem
              subPath: filebeat.pem
              readOnly: true
            - name: filebeat-certs
              mountPath: /etc/ssl/filebeat.key
              subPath: filebeat-key.pem
              readOnly: true
            - name: wazuh-manager-worker
              mountPath: /var/ossec/api/configuration
              subPath: wazuh/var/ossec/api/configuration
            - name: wazuh-manager-worker
              mountPath: /var/ossec/etc
              subPath: wazuh/var/ossec/etc
            - name: wazuh-manager-worker
              mountPath: /var/ossec/logs
              subPath: wazuh/var/ossec/logs
            - name: wazuh-manager-worker
              mountPath: /var/ossec/queue
              subPath: wazuh/var/ossec/queue
            - name: wazuh-manager-worker
              mountPath: /var/ossec/var/multigroups
              subPath: wazuh/var/ossec/var/multigroups
            - name: wazuh-manager-worker
              mountPath: /var/ossec/integrations
              subPath: wazuh/var/ossec/integrations
            - name: wazuh-manager-worker
              mountPath: /var/ossec/active-response/bin
              subPath: wazuh/var/ossec/active-response/bin
            - name: wazuh-manager-worker
              mountPath: /var/ossec/agentless
              subPath: wazuh/var/ossec/agentless
            - name: wazuh-manager-worker
              mountPath: /var/ossec/wodles
              subPath: wazuh/var/ossec/wodles
            - name: wazuh-manager-worker
              mountPath: /etc/filebeat
              subPath: filebeat/etc/filebeat
            - name: wazuh-manager-worker
              mountPath: /var/lib/filebeat
              subPath: filebeat/var/lib/filebeat
          ports:
            - containerPort: 1514
              name: agents-events
            - containerPort: 1516
              name: cluster
          env:
            - name: INDEXER_URL
              value: https://indexer:9200
            - name: INDEXER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: indexer-cred
                  key: username
            - name: INDEXER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: indexer-cred
                  key: password
            - name: FILEBEAT_SSL_VERIFICATION_MODE
              value: 'full'
            - name: SSL_CERTIFICATE_AUTHORITIES
              value: /etc/ssl/root-ca.pem
            - name: SSL_CERTIFICATE
              value: /etc/ssl/filebeat.pem
            - name: SSL_KEY
              value: /etc/ssl/filebeat.key
            - name: WAZUH_CLUSTER_KEY
              valueFrom:
                secretKeyRef:
                  name: wazuh-cluster-key
                  key: key
  volumeClaimTemplates:
    claimName: "wazuh-manager-worker"
---
# Source: wazuh/templates/Ingresses/ing-wazuh-dashboard.yaml
apiVersion:  networking.k8s.io/v1
kind: Ingress
metadata:
  name: wazuh-ingress-dashboard
  namespace: wazuh
spec:
  ingressClassName: nginx
  rules:
    - host: wazuh.schub.cloud
      http:
        paths:
          - backend:
              service:
                name: dashboard
                port:
                  number: 5601
            path: /
            pathType: Prefix
